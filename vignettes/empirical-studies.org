#+TITLE: Estimation of average treatment effect wit generalized random forest in censored data: Proof of concept 
#+Author: Helene Charlotte Wiese Rytgaard & Thomas Alexander Gerds
#+Date: 
#+EMAIL: tag@biostat.ku.dk
#+LANGUAGE:  en
#+OPTIONS: H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc author:nil
#+LaTeX_CLASS: org-article
#+LaTeX_HEADER:\usepackage{authblk}
#+LaTeX_HEADER:\usepackage{natbib}
#+LaTeX_HEADER:\usepackage[table,usenames,dvipsnames]{xcolor}
#+LaTeX_HEADER:\definecolor{lightGray}{gray}{0.98}
#+LaTeX_HEADER:\definecolor{medioGray}{gray}{0.83}
#+LaTeX_HEADER:\author{Thomas Alexander Gerds}
#+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen}
#+setupfile:~/emacs-genome/snps/org-templates/setup-all-purpose.org
#+superman-export-target: html
* Intro

We test our two-stage estimator.
  
* Data generating model

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
library(lava)
library(Publish)
library(riskRegression)
library(prodlim)
library(prodlim)
library(survival)
library(data.table)
library(grf)
library(ranger)
if (system("echo $USER",intern=TRUE)=="tag")
  setwd("~/research/SoftWare/grfCausalSearch/vignettes/")
else
  setwd("~princess-hely/grfCausalSearch/vignettes/")
source("../R/grfcens.R")
m <- lvm(~A+X1+X2+X3+X4+X5)
# treatment variable
distribution(m,~A) <- binomial.lvm()
# latent outcome variables
distribution(m,~latenttime1) <- coxWeibull.lvm()
distribution(m,~latenttime2) <- coxWeibull.lvm()
distribution(m,~censtime) <- coxWeibull.lvm(scale=1/25)
# observed outcome
m <- eventTime(m,time~min(latenttime1=1,latenttime2=2,censtime=0),"event")
# dependencies: log-odds ratios and log-hazard ratios
# no effect of A on latenttime1
# regression(m,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.8,-.1,0)
regression(m,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.2,-.1,0)
regression(m,latenttime1~A+X1+X2+X3+X4+X5) <- c(0,.1,-.3,.8,-.1,0)
regression(m,latenttime2~A+X1+X2+X3+X4+X5) <- c(0.2,0,-.3,-.8,-.1,.5)
# no effect of any variable on censoring distribution
gammaA <- gamma1 <- gamma2 <- gamma3 <- gamma4 <- gamma5  <- 0
regression(m,censtime~A+X1+X2+X3+X4+X5) <- c(gammaA,gamma1,gamma2,gamma3,gamma4,gamma5)
## d <- sim(m,1000)
## setDT(d)[,mean(time<7&event==0)]
m
#+END_SRC

#+RESULTS[<2020-06-10 13:38:24> 1e2c957538283269dee53fede01c3597bcfaae1f]:
#+begin_example
Error: unexpected 'else' in "else"
Error in setwd("~princess-hely/grfCausalSearch/vignettes/") : 
  cannot change working directory
Event History Model
                                                                 
 A ~ X1+X2+X3+X4                                 binomial(logit) 
 X1 ~ 1                                          Normal          
 X2 ~ 1                                          Normal          
 X3 ~ 1                                          Normal          
 X4 ~ 1                                          Normal          
 X5 ~ 1                                          Normal          
 latenttime1 ~ X1+X2+X3+X4                       weibull(2,0.01) 
 latenttime2 ~ A+X2+X3+X4+X5                     weibull(2,0.01) 
 censtime ~ 1                                    weibull(2,0.01) 
 time = min(latenttime1,latenttime2,censtime)    event := {1,2,0}

Latent Variable Model
                                               
  A ~ X1+X2+X3+X4               binomial(logit)
  latenttime1 ~ X1+X2+X3+X4     weibull(2,0.01)
  latenttime2 ~ A+X2+X3+X4+X5   weibull(2,0.01)
  censtime ~ 1                  weibull(2,0.01)
  time ~ 1                      deterministic  
  event ~ 1                     deterministic  

Exogenous variables:                    
  X1        gaussian
  X2        gaussian
  X3        gaussian
  X4        gaussian
  X5        gaussian
#+end_example

* Uncensored data

** One repetition

*** No effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(498)
regression(m,latenttime1~A) <- 0
d <- setDT(sim(m,500))
d[,dummy:=1]
d[,A:=factor(A)]
fit1 <- grfcens(formula=Hist(latenttime1,dummy)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
fit1
#+END_SRC

#+RESULTS[<2020-06-10 13:50:47> 79732a5b08b1963cd94cd727bec9a0ba245bd439]:
:         ate          se       lower       upper 
:  0.01834816  0.04165494 -0.06329402  0.09999035

*** Positive effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(498)
regression(m,latenttime1~A) <- 1
d <- setDT(sim(m,500))
d[,dummy:=1]
d[,A:=factor(A)]
fit1 <- grfcens(formula=Hist(latenttime1,dummy)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
fit1
#+END_SRC

#+RESULTS[<2020-06-10 13:45:26> 9261ec36bc192861d81606aae6fa8c0e91b5113d]:
:        ate         se      lower      upper 
: 0.32978047 0.03897086 0.25339899 0.40616195

*** Negative effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(498)
regression(m,latenttime1~A) <- -1
d <- setDT(sim(m,500))
d[,dummy:=1]
d[,A:=factor(A)]
fit1 <- grfcens(formula=Hist(latenttime1,dummy)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
fit1
#+END_SRC

#+RESULTS[<2020-06-10 13:45:40> 151c646b5af240b3a5895ba4acde6f89a26f3106]:
:         ate          se       lower       upper 
: -0.24055401  0.03676123 -0.31260470 -0.16850331

** Small Simulation Study

*** No effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
## regression(m,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.8,-.1,0)
m1 <- m
regression(m1,latenttime1~A) <- 0
run <- function(...,N,timeinterest){
  dat <- as.data.table(lava::sim(m1,n = N))
  dat[,dummy:=1]
  out <- grfcens(formula=Hist(latenttime1,dummy)~intervene(A)+X1+X2+X3+X4+X5,data=dat,times=7)
  out
}
# undebug(run)
x <- sim(run,30,mc.cores=3,timeinterest=7,N=200)
x
#+END_SRC

#+RESULTS[<2020-06-10 13:47:21> b7e11ce2e169465b04c209b8e5eb6a01ef9ca261]:
#+begin_example
    ate       se        lower     upper    
1   -0.04046   0.06375  -0.16540   0.08448 
2   -0.03707   0.06769  -0.16973   0.09560 
3   -0.03036   0.06650  -0.16070   0.09999 
4   -0.03355   0.06529  -0.16151   0.09441 
5   -0.09749   0.06473  -0.22437   0.02938 
---                                        
26  -0.022802  0.064192 -0.148615  0.103011
27  -0.010145  0.065534 -0.138589  0.118298
28  -0.065567  0.064589 -0.192160  0.061026
29   0.053550  0.061210 -0.066420  0.173520
30  -0.008848  0.065875 -0.137960  0.120263

           ate       se     lower    upper
Mean -0.005950 0.065677 -0.134675 0.122775
SD    0.048841 0.001943  0.050172 0.047777
#+end_example

* Censored data

** One repetition

*** No effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(499)
regression(m,latenttime1~A) <- 0
d <- setDT(sim(m,500))
Fit1 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
Fit1
#+END_SRC

#+RESULTS[<2020-06-10 14:07:08> f7d846a5751b28c4c97296525046673cf31558c4]:
:          ate           se        lower        upper 
: -0.004082882  0.072116126 -0.145427891  0.137262128

*** Positive effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(498)
regression(m,latenttime1~A) <- 1
d <- setDT(sim(m,500))
fit1 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
fit1
#+END_SRC

#+RESULTS[<2020-06-10 13:51:23> ad241153ca50adaed2a6b8437050c3977dc896f4]:
:        ate         se      lower      upper 
: 0.21554009 0.08553303 0.04789842 0.38318175

*** Negative effect

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
set.seed(498)
regression(m,latenttime1~A) <- -1
d <- setDT(sim(m,500))
fit1 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=7)
fit1
#+END_SRC

#+RESULTS[<2020-06-10 13:51:35> b99541456c92030d580c42f0620140ba5874e317]:
:         ate          se       lower       upper 
: -0.22301823  0.07118216 -0.36253270 -0.08350376

*** No effect of A and but effect on censoring
#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output   :exports both  :session *R* :cache yes  
m1 <- m
regression(m1,latenttime1~A+X1+X2+X3+X4+X5) <- c(0,.1,-.3,.1,-.4,1.5)
regression(m1,censtime~A+X1+X2+X3+X4+X5) <- c(1,.1,-.3,-.1,-.3,-1)
regression(m1,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.4,-.1,-1.5)
test <- sim(m1,1000)
par(mfrow=c(1,2))
plot(prodlim(Hist(time,event)~A,data=test),atrisk.at=c(0,1,3,5),xlim=c(0,5))
plot(prodlim(Hist(time,event)~X5,data=test,reverse=TRUE),atrisk.at=c(0,1,3,5),xlim=c(0,5))
d <- setDT(sim(m1,500))
KM <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=3,method.weight="km",formula.weight=Hist(time,event)~1)
forest <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=d,times=3,args.weight=list(num.tree=500))
out <- rbind(KM,forest)
out
#+END_SRC

#+RESULTS[<2020-06-10 15:14:13> 924fce6bc87fe9ec0cbef5b328d5f9d56389c461]:
:                ate         se       lower      upper
: KM     -0.04442005 0.04407674 -0.13080886 0.04196876
: forest -0.02749319 0.03465343 -0.09541266 0.04042628




** Small Simulation Study

*** No effect of A and no effect on censoring

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
m1 <- m
regression(m1,latenttime1~A) <- 0
run2 <- function(...,N,timeinterest){
  dat <- as.data.table(lava::sim(m1,n = N))
  out1 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=dat,times=timeinterest,method.weight="km")
  out2 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=dat,times=timeinterest)
  names(out1) <- paste0(names(out1),".km")
  names(out2) <- paste0(names(out2),".forest")
  censpercent <- dat[,mean(time<timeinterest&event==0)]
  coverage.km <- out1[[3]]<0 & out1[[4]]>0
  coverage.forest <- out2[[3]]<0 & out2[[4]]>0
  c(cens=censpercent,out1,coverage.km=coverage.km,out2,coverage.forest=coverage.forest)
}
# debug(run2)
set.seed(8)
x <- sim(run2,30,mc.cores=3,timeinterest=7,N=200)
x
#+END_SRC

#+RESULTS[<2020-06-10 14:17:06> 6cf3b9a03b223ef7a38b6c784bb14b68081f5798]:
#+begin_example
    cens      ate.km    se.km     lower.km  upper.km  coverage.km ate.forest se.forest lower.forest upper.forest
1    0.54000  -0.06317   0.11789  -0.29423   0.16788   1.00000    -0.06696    0.11782  -0.29788      0.16396    
2    0.58500  -0.01063   0.09872  -0.20413   0.18286   1.00000    -0.01582    0.09840  -0.20869      0.17705    
3    0.56500   0.01324   0.09678  -0.17645   0.20292   1.00000     0.01891    0.09585  -0.16896      0.20677    
4    0.53500   0.04883   0.11875  -0.18392   0.28157   1.00000     0.02516    0.11992  -0.20987      0.26019    
5    0.57000   0.11114   0.11316  -0.11065   0.33293   1.00000     0.10073    0.11028  -0.11542      0.31688    
---                                                                                                             
26   0.580000  0.058052  0.119693 -0.176542  0.292646  1.000000    0.066441   0.121645 -0.171979     0.304861   
27   0.530000  0.002146  0.126123 -0.245050  0.249342  1.000000    0.003966   0.124688 -0.240418     0.248350   
28   0.565000  0.107692  0.130689 -0.148455  0.363838  1.000000    0.123205   0.131935 -0.135384     0.381794   
29   0.570000 -0.027450  0.135905 -0.293818  0.238918  1.000000   -0.016378   0.134337 -0.279673     0.246917   
30   0.590000 -0.006124  0.097102 -0.196440  0.184193  1.000000   -0.002039   0.096372 -0.190924     0.186845   
    coverage.forest
1    1.00000       
2    1.00000       
3    1.00000       
4    1.00000       
5    1.00000       
---                
26   1.000000      
27   1.000000      
28   1.000000      
29   1.000000      
30   1.000000      

        cens   ate.km    se.km lower.km upper.km coverage.km ate.forest se.forest lower.forest upper.forest
Mean 0.55617 0.011872 0.116849 -0.21715 0.240891     0.96667  0.0097887  0.117127     -0.21978     0.239353
SD   0.03156 0.099231 0.014309  0.10911 0.096758     0.18257  0.0992063  0.015462      0.10947     0.097661
     coverage.forest
Mean         0.93333
SD           0.25371
#+end_example

*** No effect of A but effect on censoring


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports both  :session *R* :cache yes  
## regression(m,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.8,-.1,0)
m1 <- m
regression(m1,latenttime1~A+X1+X2+X3+X4+X5) <- c(0,.1,-.3,.1,-.4,1.5)
regression(m1,censtime~A+X1+X2+X3+X4+X5) <- c(1,.1,-.3,-.1,-.3,-1)
regression(m1,A~X1+X2+X3+X4+X5) <- c(.1,-.3,.4,-.1,-1.5)
run2 <- function(...,N,timeinterest){
  dat <- as.data.table(lava::sim(m1,n = N))
  out1 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=dat,times=timeinterest,method.weight="km",formula.weight=Hist(time,event)~1)
  out2 <- grfcens(formula=Hist(time,event)~intervene(A)+X1+X2+X3+X4+X5,data=dat,times=timeinterest,args.weight=list(num.tree=500))
  names(out1) <- paste0(names(out1),".km")
  names(out2) <- paste0(names(out2),".forest")
  censpercent <- dat[,mean(time<timeinterest&event==0)]
  coverage.km <- out1[[3]]<0 & out1[[4]]>0
  coverage.forest <- out2[[3]]<0 & out2[[4]]>0
  c(cens=censpercent,out1,coverage.km=coverage.km,out2,coverage.forest=coverage.forest)
}
# undebug(run2)
set.seed(9)
# x <- sim(run2,1,mc.cores=1,timeinterest=7,N=200)
x <- sim(run2,300,mc.cores=3,timeinterest=3,N=200)
x
#+END_SRC

#+RESULTS[<2020-06-10 15:25:05> 38bd02de24efb1df4daf2cc55a82654eeed0f804]:
#+begin_example
    cens      ate.km    se.km     lower.km  upper.km  coverage.km ate.forest se.forest lower.forest upper.forest
1    0.415000 -0.088864  0.071588 -0.229173  0.051445  1.000000   -0.057069   0.056272 -0.167361     0.053223   
2    0.400000 -0.151081  0.048943 -0.247007 -0.055156  0.000000   -0.111725   0.038909 -0.187986    -0.035464   
3    0.530000 -0.020423  0.078118 -0.173530  0.132685  1.000000    0.020821   0.065570 -0.107695     0.149336   
4    0.440000  0.012923  0.072609 -0.129387  0.155234  1.000000   -0.002605   0.051501 -0.103546     0.098336   
5    0.430000 -0.173883  0.063681 -0.298694 -0.049071  0.000000   -0.120369   0.050422 -0.219195    -0.021543   
---                                                                                                             
296  0.380000 -0.013016  0.070317 -0.150834  0.124802  1.000000    0.003014   0.058152 -0.110962     0.116989   
297  0.430000 -0.191058  0.081702 -0.351192 -0.030925  0.000000   -0.151725   0.064875 -0.278878    -0.024572   
298  0.510000 -0.096091  0.061239 -0.216118  0.023936  1.000000   -0.067667   0.045886 -0.157603     0.022268   
299  0.455000 -0.207278  0.055560 -0.316173 -0.098382  0.000000   -0.152130   0.041426 -0.233324    -0.070936   
300  0.435000 -0.011150  0.067091 -0.142645  0.120345  1.000000    0.017430   0.056937 -0.094164     0.129024   
    coverage.forest
1    1.000000      
2    0.000000      
3    1.000000      
4    1.000000      
5    0.000000      
---                
296  1.000000      
297  0.000000      
298  1.000000      
299  0.000000      
300  1.000000      

         cens    ate.km     se.km  lower.km upper.km coverage.km ate.forest se.forest lower.forest upper.forest
Mean 0.453750 -0.057326 0.0713899 -0.197248 0.082595     0.85000  -0.028970 0.0554761     -0.13770     0.079761
SD   0.037717  0.070164 0.0092248  0.069095 0.075669     0.35767   0.054058 0.0075122      0.05156     0.060163
     coverage.forest
Mean         0.91000
SD           0.28666
#+end_example
